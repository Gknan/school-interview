package top100;

/*
数组nums包含从0到n的所有整数，但其中缺了一个。请编写代码找出那个缺失的整数。你有办法在O(n)时间内完成吗？

注意：本题相对书上原题稍作改动

示例 1：

输入：[3,0,1]
输出：2


示例 2：

输入：[9,6,4,2,3,5,7,0,1]
输出：8

分析：
0暴力法
1，排序法
2，通排序，开辟 N+ 1 的数组，两边遍历找到 时间 O(N) 空间 O(N)
3，尝试使用 数组本位的 符号来标识该位置是否是正确的，先把数组扩展到 N + 1 个，遍历并把每个数字放到正确的位置上，最后
某个位置是 0 ，则这个位置 i 就是确实的数字；因为每个元素最多被移动两次 时间还是 O(N) 空间 O(1)


4，求和湘减法；可能溢出。。。。。。

牛逼的方法，利用两次异或，相等的数字就相当于没有差生信息；每遍历一个位置，记录一个值，没遍历一个位置，异或 i 和 本位置的
数字，最终的结果就是节骨
异或的初始值怎么办？初始值是 0 ，因为 0 异或任何值还是任何值本身，不会对结果造成影响。

二维坐标转以为数组的方法：x *n + y = idx n 是每一行的个数


 */
public class MissingNumber_17 {

    public int missingNumber(int[] nums) {
        return 0;
    }
}
